#ifndef ENUMERATORS_H
#define ENUMERATORS_H

enum Estado
{
    e0, e1, e2, e3, e4, e5, e6, e7, e8, e9, e10, e11, e12, e13, e14, e15,
    e16, e17, e18, e19, e20, e21, e22, e23, e24, e25, e26, e27, e28, e29,
    e30, e31, e32, e33, e34, e35, e36,
    ESTADOS, ACP, ERR = -1
};

enum Entrada
{
    _0,_1_7, _8_9, A_D, E, F, G_W, X, Y_Z, ARIT_SIM, ARIT_COM, DELIM, PUNTO, COMILLAS,
    DOS_PUNTOS, IGUAL, MAYOR_QUE, MENOR_QUE, NEGACION, OR, AND, GUION_BAJO, COMILLA, DIVISOR,
    ASTERISCO, ESPACIO, OTRO,
    ENTRADAS
};

enum
{
    INTERRUMPE, VALOR, CANAL, CONTS, CONTINUA, DEFECTO, DIFER, SINO, DESDE,
    FUNCION, IR, IR_A, SI, IMPORTAR, INTERFAZ, MAPA, PAQUETE, RANGO, REGRESA,
    SELECCIONA, ESTRUCTURA, CASO, TIPO, ENTERO, VAR, DIV, MOD, LOGICO,
    CARACTER, ALFABETICO, REAL,
    PALABRAS_RESERVADAS
};

enum Tipo
{
    T_ENTERO, T_REAL, T_CADENA, T_BOOLEANO, T_FUNCION
};

#endif // ENUMERATORS_H
